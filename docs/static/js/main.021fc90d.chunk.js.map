{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","config.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,mCACI,uBAAMC,SARO,SAACC,GAClBA,EAAEC,iBAEFN,GAAe,SAAAO,GAAI,MAAI,CAACL,OAKpB,UACI,6BAAKA,IACL,uBACIM,KAAK,OACLC,MAAOP,EACPQ,SAjBU,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,gBCNlBG,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IAG1B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,6BAAKL,EAAIK,Y,uBCLHC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,iDACiCM,UAAUF,GAD3C,kBCFD,GDEC,oBCHA,oCDGA,SAEFG,MAAMP,GAFJ,cAEfQ,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAOA,EAAKE,KAAI,SAACf,GAC5B,MAAO,CACLgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAKH,EAAIiB,OAAOC,UAAUf,QAEzB,GAVgB,kBAWdW,GAXc,4CAAH,sDEAPK,EAAU,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAc,IAAD,EACdnB,mBAAS,CACjCyB,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAZAC,qBAAU,WAERjB,EAAQC,GAAUiB,MAAK,SAACC,GAEtBC,QAAQC,IAAIF,GACZH,EAAS,CACNT,KAAMY,EACNL,SAAS,SAGb,CAACb,IAEGc,EDjB0BO,CAAarB,GAAhCU,EAFwB,EAE9BJ,KAAcO,EAFgB,EAEhBA,QAErB,OACE,qCACE,oBAAInB,UAAU,oCAAd,SAAmDM,IAClDa,GAAW,mBAAGnB,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACGgB,EAAOF,KAAI,SAACf,GACX,OAAO,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIgB,aEP3Ba,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,WAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAW9B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG2C,EAAWf,KAAK,SAACR,GAChB,OAAO,cAAC,EAAD,CAELA,SAAUA,GADLA,YCpBnBwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.021fc90d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => { // deestructuro los argumentos en lugar de props\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // setCategories se puede llamar con un callback que tiene el estado anterior\n        setCategories( cats => [inputValue]);\n    };\n    \n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <h1>{inputValue}</h1>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n};\n/* \nAddCategory.propTypes = {\n    setCategories: PropTypes.isRequired\n} */\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n","import React from 'react'\n\nexport const GifGridItem = ({img}) => {\n   //console.log(url, title)\n   // console.log(img.id);\n   return (\n     <div className=\"card animate__animated animate__fadeIn\">\n       <img src={img.url} alt={img.title} />\n       <h5>{img.title}</h5>\n     </div>\n   );\n}\n","import {api_key, limite} from '../config'; \n\n// Esta funcion recibe la categoria y una promesa que resuelve a las imagenes obtenidas \nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limite}&api_key=${api_key}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data ? data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized.url,\n    };\n  }) : [];\n  return gifs;\n};","export const api_key = \"iE77RMG7gEmNWq8003xGUGO47l7WrzMd\";\nexport const limite = 10;","import { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ( {category}) => {\n   \n   const {data: images, loading} = useFetchGifs(category);\n\n   return (\n     <>\n       <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n       {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n       <div className=\"card-grid\">\n         {images.map((img) => {\n           return <GifGridItem key={img.id} img={img} />;\n         })}\n       </div>\n     </>\n   );\n};","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  \n  // A este hook le pasamos como segundo argumento un arreglo de dependencias\n  useEffect(() => {\n    // Este hook llama al helper getGifts\n    getGifs(category).then((imgs) => {\n      // Cuando se cumple la promesa, seteamos el estado del componente\n      console.log(imgs);\n      setState({\n         data: imgs,\n         loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};","\nimport { React, useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['batman']);\n\n/*     const handleAdd = () => {\n        //console.log(categories);\n        setCategories([...categories, 'Muebles']);\n    }; */\n\n\n    // Esto es lo que renderiza el componente\n    return (\n      <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr />\n\n        <ol>\n          {categories.map( (category) => {\n            return <GifGrid \n              key={category}\n              category={category}>\n            </GifGrid>\n          })}\n        </ol>\n      </>\n    );\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp'\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}